Starting parse
Entering state 0
Reducing stack by rule 7 (line 55):
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --(end of buffer or a NUL)
--accepting rule at line 38 ("# 1 "11-numbers.oc"")
--accepting rule at line 37 ("
")
--accepting rule at line 38 ("# 1 "<built-in>"")
--accepting rule at line 37 ("
")
--accepting rule at line 38 ("# 1 "<command-line>"")
--accepting rule at line 37 ("
")
--accepting rule at line 38 ("# 1 "11-numbers.oc"")
--accepting rule at line 37 ("
")
--accepting rule at line 37 ("
")
--accepting rule at line 37 ("
")
--accepting rule at line 38 ("# 1 "oclib.oh" 1")
--accepting rule at line 37 ("
")
--accepting rule at line 38 ("# 23 "oclib.oh"")
--accepting rule at line 37 ("
")
--accepting rule at line 66 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 18 (line 82):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("__assert_fail")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 78
Reading a token: --accepting rule at line 70 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 22 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 32 78
Entering state 76
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("expr")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2 32 78
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 32 78 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2 32 78
Entering state 116
Reducing stack by rule 25 (line 92):
   $1 = token '(' ()
   $2 = nterm decl ()
-> $$ = nterm params ()
Stack now 0 2 32
Entering state 79
Reading a token: --accepting rule at line 48 (",")
Next token is token ',' ()
Shifting token ',' ()
Entering state 117
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 70 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 22 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 32 79 117
Entering state 76
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("file")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2 32 79 117
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 32 79 117 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2 32 79 117
Entering state 145
Reducing stack by rule 24 (line 90):
   $1 = nterm params ()
   $2 = token ',' ()
   $3 = nterm decl ()
-> $$ = nterm params ()
Stack now 0 2 32
Entering state 79
Reading a token: --accepting rule at line 48 (",")
Next token is token ',' ()
Shifting token ',' ()
Entering state 117
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 69 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 8
Reducing stack by rule 21 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 32 79 117
Entering state 76
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("line")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2 32 79 117
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 32 79 117 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2 32 79 117
Entering state 145
Reducing stack by rule 24 (line 90):
   $1 = nterm params ()
   $2 = token ',' ()
   $3 = nterm decl ()
-> $$ = nterm params ()
Stack now 0 2 32
Entering state 79
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 146
Reducing stack by rule 28 (line 98):
   $1 = nterm decl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 66 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 18 (line 82):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("putb")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 78
Reading a token: --accepting rule at line 67 ("bool")
Next token is token TOK_BOOL ()
Shifting token TOK_BOOL ()
Entering state 6
Reducing stack by rule 19 (line 83):
   $1 = token TOK_BOOL ()
-> $$ = nterm basetype ()
Stack now 0 2 32 78
Entering state 76
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("b")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2 32 78
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 32 78 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2 32 78
Entering state 116
Reducing stack by rule 25 (line 92):
   $1 = token '(' ()
   $2 = nterm decl ()
-> $$ = nterm params ()
Stack now 0 2 32
Entering state 79
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 146
Reducing stack by rule 28 (line 98):
   $1 = nterm decl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 66 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 18 (line 82):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("putc")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 78
Reading a token: --accepting rule at line 68 ("char")
Next token is token TOK_CHAR ()
Shifting token TOK_CHAR ()
Entering state 7
Reducing stack by rule 20 (line 84):
   $1 = token TOK_CHAR ()
-> $$ = nterm basetype ()
Stack now 0 2 32 78
Entering state 76
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("c")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2 32 78
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 32 78 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2 32 78
Entering state 116
Reducing stack by rule 25 (line 92):
   $1 = token '(' ()
   $2 = nterm decl ()
-> $$ = nterm params ()
Stack now 0 2 32
Entering state 79
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 146
Reducing stack by rule 28 (line 98):
   $1 = nterm decl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 66 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 18 (line 82):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("puti")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 78
Reading a token: --accepting rule at line 69 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 8
Reducing stack by rule 21 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 32 78
Entering state 76
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("i")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2 32 78
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 32 78 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2 32 78
Entering state 116
Reducing stack by rule 25 (line 92):
   $1 = token '(' ()
   $2 = nterm decl ()
-> $$ = nterm params ()
Stack now 0 2 32
Entering state 79
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 146
Reducing stack by rule 28 (line 98):
   $1 = nterm decl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 66 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 18 (line 82):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("puts")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 78
Reading a token: --accepting rule at line 70 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 22 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 32 78
Entering state 76
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("s")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2 32 78
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 32 78 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2 32 78
Entering state 116
Reducing stack by rule 25 (line 92):
   $1 = token '(' ()
   $2 = nterm decl ()
-> $$ = nterm params ()
Stack now 0 2 32
Entering state 79
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 146
Reducing stack by rule 28 (line 98):
   $1 = nterm decl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 66 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 18 (line 82):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("endl")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 78
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Reducing stack by rule 26 (line 93):
   $1 = token '(' ()
-> $$ = nterm params ()
Stack now 0 2 32
Entering state 79
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 146
Reducing stack by rule 28 (line 98):
   $1 = nterm decl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 69 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 8
Reducing stack by rule 21 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("getc")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 78
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Reducing stack by rule 26 (line 93):
   $1 = token '(' ()
-> $$ = nterm params ()
Stack now 0 2 32
Entering state 79
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 146
Reducing stack by rule 28 (line 98):
   $1 = nterm decl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 70 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 22 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("getw")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 78
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Reducing stack by rule 26 (line 93):
   $1 = token '(' ()
-> $$ = nterm params ()
Stack now 0 2 32
Entering state 79
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 146
Reducing stack by rule 28 (line 98):
   $1 = nterm decl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 70 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 22 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("getln")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 78
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Reducing stack by rule 26 (line 93):
   $1 = token '(' ()
-> $$ = nterm params ()
Stack now 0 2 32
Entering state 79
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 146
Reducing stack by rule 28 (line 98):
   $1 = nterm decl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 70 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 9
Reducing stack by rule 22 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 40 ("[]")
Next token is token TOK_NEWARRAY ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2
Entering state 33
Next token is token TOK_NEWARRAY ()
Shifting token TOK_NEWARRAY ()
Entering state 81
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("getargv")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 33 81
Entering state 119
Reducing stack by rule 14 (line 72):
   $1 = nterm type ()
   $2 = token TOK_NEWARRAY ()
   $3 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 78
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Reducing stack by rule 26 (line 93):
   $1 = token '(' ()
-> $$ = nterm params ()
Stack now 0 2 32
Entering state 79
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 146
Reducing stack by rule 28 (line 98):
   $1 = nterm decl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 66 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 18 (line 82):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("exit")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 78
Reading a token: --accepting rule at line 69 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 8
Reducing stack by rule 21 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 32 78
Entering state 76
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("status")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2 32 78
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 32 78 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2 32 78
Entering state 116
Reducing stack by rule 25 (line 92):
   $1 = token '(' ()
   $2 = nterm decl ()
-> $$ = nterm params ()
Stack now 0 2 32
Entering state 79
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 146
Reducing stack by rule 28 (line 98):
   $1 = nterm decl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 38 ("# 4 "11-numbers.oc" 2")
--accepting rule at line 37 ("
")
--accepting rule at line 37 ("
")
--accepting rule at line 69 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 8
Reducing stack by rule 21 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("number")
Next token is token TOK_IDENT ()
Reducing stack by rule 17 (line 79):
   $1 = nterm basetype ()
-> $$ = nterm type ()
Stack now 0 2
Entering state 33
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 80
Reducing stack by rule 15 (line 75):
   $1 = token TOK_IDENT ()
-> $$ = nterm declid ()
Stack now 0 2 33
Entering state 82
Reducing stack by rule 13 (line 71):
   $1 = nterm type ()
   $2 = nterm declid ()
-> $$ = nterm decl ()
Stack now 0 2
Entering state 32
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 50 ("=")
Next token is token '=' ()
Shifting token '=' ()
Entering state 77
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 84 ("1")
Next token is token TOK_INTCON ()
Shifting token TOK_INTCON ()
Entering state 19
Reducing stack by rule 82 (line 199):
   $1 = token TOK_INTCON ()
-> $$ = nterm constant ()
Stack now 0 2 32 77
Entering state 49
Reducing stack by rule 52 (line 147):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 32 77
Entering state 115
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 144
Reducing stack by rule 40 (line 120):
   $1 = nterm decl ()
   $2 = token '=' ()
   $3 = nterm expr ()
   $4 = token ';' ()
-> $$ = nterm vardecl ()
Stack now 0 2
Entering state 38
Reducing stack by rule 34 (line 112):
   $1 = nterm vardecl ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 37
Reducing stack by rule 4 (line 52):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 74 ("while")
Next token is token TOK_WHILE ()
Shifting token TOK_WHILE ()
Entering state 11
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 53
Reading a token: --accepting rule at line 83 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 18
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 56 (">")
Next token is token TOK_GT ()
Reducing stack by rule 79 (line 192):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 11 53
Entering state 48
Reducing stack by rule 51 (line 146):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 11 53
Entering state 103
Next token is token TOK_GT ()
Shifting token TOK_GT ()
Entering state 88
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 84 ("0")
Next token is token TOK_INTCON ()
Shifting token TOK_INTCON ()
Entering state 19
Reducing stack by rule 82 (line 199):
   $1 = token TOK_INTCON ()
-> $$ = nterm constant ()
Stack now 0 2 11 53 103 88
Entering state 49
Reducing stack by rule 52 (line 147):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 103 88
Entering state 125
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Reducing stack by rule 58 (line 155):
   $1 = nterm expr ()
   $2 = token TOK_GT ()
   $3 = nterm expr ()
-> $$ = nterm binop ()
Stack now 0 2 11 53
Entering state 43
Reducing stack by rule 46 (line 141):
   $1 = nterm binop ()
-> $$ = nterm expr ()
Stack now 0 2 11 53
Entering state 103
Next token is token ')' ()
Shifting token ')' ()
Entering state 138
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 45 ("{")
Next token is token '{' ()
Shifting token '{' ()
Entering state 29
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 36 ("   ")
--accepting rule at line 83 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 18
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 61
Reducing stack by rule 76 (line 185):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
-> $$ = nterm callfront ()
Stack now 0 2 11 53 103 138 29
Entering state 46
Reading a token: --accepting rule at line 83 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 18
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Reducing stack by rule 79 (line 192):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 11 53 103 138 29 46
Entering state 48
Reducing stack by rule 51 (line 146):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 103 138 29 46
Entering state 100
Next token is token ')' ()
Reducing stack by rule 75 (line 182):
   $1 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2 11 53 103 138 29 46
Entering state 101
Next token is token ')' ()
Shifting token ')' ()
Entering state 136
Reducing stack by rule 78 (line 189):
   $1 = nterm callfront ()
   $2 = nterm exprs ()
   $3 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2 11 53 103 138 29
Entering state 47
Reducing stack by rule 49 (line 144):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 103 138 29
Entering state 42
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 98
Reducing stack by rule 38 (line 116):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2 11 53 103 138 29
Entering state 71
Reducing stack by rule 32 (line 108):
   $1 = nterm statement ()
-> $$ = nterm stmts ()
Stack now 0 2 11 53 103 138 29
Entering state 70
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 36 ("   ")
--accepting rule at line 83 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 18
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 61
Reducing stack by rule 76 (line 185):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
-> $$ = nterm callfront ()
Stack now 0 2 11 53 103 138 29 70
Entering state 46
Reading a token: --accepting rule at line 85 ("'\n'")
Next token is token TOK_CHARCON ()
Shifting token TOK_CHARCON ()
Entering state 20
Reducing stack by rule 83 (line 200):
   $1 = token TOK_CHARCON ()
-> $$ = nterm constant ()
Stack now 0 2 11 53 103 138 29 70 46
Entering state 49
Reducing stack by rule 52 (line 147):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 103 138 29 70 46
Entering state 100
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Reducing stack by rule 75 (line 182):
   $1 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2 11 53 103 138 29 70 46
Entering state 101
Next token is token ')' ()
Shifting token ')' ()
Entering state 136
Reducing stack by rule 78 (line 189):
   $1 = nterm callfront ()
   $2 = nterm exprs ()
   $3 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2 11 53 103 138 29 70
Entering state 47
Reducing stack by rule 49 (line 144):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 103 138 29 70
Entering state 42
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 98
Reducing stack by rule 38 (line 116):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2 11 53 103 138 29 70
Entering state 112
Reducing stack by rule 31 (line 107):
   $1 = nterm stmts ()
   $2 = nterm statement ()
-> $$ = nterm stmts ()
Stack now 0 2 11 53 103 138 29
Entering state 70
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 36 ("   ")
--accepting rule at line 83 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 18
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 50 ("=")
Next token is token '=' ()
Reducing stack by rule 79 (line 192):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 11 53 103 138 29 70
Entering state 48
Reducing stack by rule 51 (line 146):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 103 138 29 70
Entering state 42
Next token is token '=' ()
Shifting token '=' ()
Entering state 90
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 18
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 59 ("+")
Next token is token '+' ()
Reducing stack by rule 79 (line 192):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 11 53 103 138 29 70 42 90
Entering state 48
Reducing stack by rule 51 (line 146):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 103 138 29 70 42 90
Entering state 127
Next token is token '+' ()
Shifting token '+' ()
Entering state 91
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 83 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 18
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Reducing stack by rule 79 (line 192):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 11 53 103 138 29 70 42 90 127 91
Entering state 48
Reducing stack by rule 51 (line 146):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 103 138 29 70 42 90 127 91
Entering state 128
Next token is token ';' ()
Reducing stack by rule 60 (line 157):
   $1 = nterm expr ()
   $2 = token '+' ()
   $3 = nterm expr ()
-> $$ = nterm binop ()
Stack now 0 2 11 53 103 138 29 70 42 90
Entering state 43
Reducing stack by rule 46 (line 141):
   $1 = nterm binop ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 103 138 29 70 42 90
Entering state 127
Next token is token ';' ()
Reducing stack by rule 53 (line 150):
   $1 = nterm expr ()
   $2 = token '=' ()
   $3 = nterm expr ()
-> $$ = nterm binop ()
Stack now 0 2 11 53 103 138 29 70
Entering state 43
Reducing stack by rule 46 (line 141):
   $1 = nterm binop ()
-> $$ = nterm expr ()
Stack now 0 2 11 53 103 138 29 70
Entering state 42
Next token is token ';' ()
Shifting token ';' ()
Entering state 98
Reducing stack by rule 38 (line 116):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2 11 53 103 138 29 70
Entering state 112
Reducing stack by rule 31 (line 107):
   $1 = nterm stmts ()
   $2 = nterm statement ()
-> $$ = nterm stmts ()
Stack now 0 2 11 53 103 138 29
Entering state 70
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 46 ("}")
Next token is token '}' ()
Shifting token '}' ()
Entering state 111
Reducing stack by rule 30 (line 103):
   $1 = token '{' ()
   $2 = nterm stmts ()
   $3 = token '}' ()
-> $$ = nterm block ()
Stack now 0 2 11 53 103 138
Entering state 36
Reducing stack by rule 33 (line 111):
   $1 = nterm block ()
-> $$ = nterm statement ()
Stack now 0 2 11 53 103 138
Entering state 152
Reducing stack by rule 41 (line 125):
   $1 = token TOK_WHILE ()
   $2 = token '(' ()
   $3 = nterm expr ()
   $4 = token ')' ()
   $5 = nterm statement ()
-> $$ = nterm while ()
Stack now 0 2
Entering state 39
Reducing stack by rule 35 (line 113):
   $1 = nterm while ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 37
Reducing stack by rule 4 (line 52):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 83 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 18
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 61
Reducing stack by rule 76 (line 185):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
-> $$ = nterm callfront ()
Stack now 0 2
Entering state 46
Reading a token: --accepting rule at line 83 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 18
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Reducing stack by rule 79 (line 192):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 46
Entering state 48
Reducing stack by rule 51 (line 146):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 46
Entering state 100
Next token is token ')' ()
Reducing stack by rule 75 (line 182):
   $1 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2 46
Entering state 101
Next token is token ')' ()
Shifting token ')' ()
Entering state 136
Reducing stack by rule 78 (line 189):
   $1 = nterm callfront ()
   $2 = nterm exprs ()
   $3 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2
Entering state 47
Reducing stack by rule 49 (line 144):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2
Entering state 42
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 98
Reducing stack by rule 38 (line 116):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 37
Reducing stack by rule 4 (line 52):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 37 ("
")
--accepting rule at line 83 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 18
Reading a token: --accepting rule at line 36 (" ")
--accepting rule at line 41 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 61
Reducing stack by rule 76 (line 185):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
-> $$ = nterm callfront ()
Stack now 0 2
Entering state 46
Reading a token: --accepting rule at line 85 ("'\n'")
Next token is token TOK_CHARCON ()
Shifting token TOK_CHARCON ()
Entering state 20
Reducing stack by rule 83 (line 200):
   $1 = token TOK_CHARCON ()
-> $$ = nterm constant ()
Stack now 0 2 46
Entering state 49
Reducing stack by rule 52 (line 147):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 46
Entering state 100
Reading a token: --accepting rule at line 42 (")")
Next token is token ')' ()
Reducing stack by rule 75 (line 182):
   $1 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2 46
Entering state 101
Next token is token ')' ()
Shifting token ')' ()
Entering state 136
Reducing stack by rule 78 (line 189):
   $1 = nterm callfront ()
   $2 = nterm exprs ()
   $3 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2
Entering state 47
Reducing stack by rule 49 (line 144):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2
Entering state 42
Reading a token: --accepting rule at line 47 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 98
Reducing stack by rule 38 (line 116):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 37
Reducing stack by rule 4 (line 52):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 37 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Now at end of input.
Reducing stack by rule 1 (line 47):
   $1 = nterm program ()
-> $$ = nterm start ()
Stack now 0
Entering state 1
Now at end of input.
Shifting token $end ()
Entering state 3
Stack now 0 1 3
Cleanup: popping token $end ()
Cleanup: popping nterm start ()
