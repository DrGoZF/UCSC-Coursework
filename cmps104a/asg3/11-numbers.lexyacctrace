Starting parse
Entering state 0
Reducing stack by rule 7 (line 55):
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --(end of buffer or a NUL)
--accepting rule at line 37 ("# 1 "11-numbers.oc"")
--accepting rule at line 36 ("
")
--accepting rule at line 37 ("# 1 "<built-in>"")
--accepting rule at line 36 ("
")
--accepting rule at line 37 ("# 1 "<command-line>"")
--accepting rule at line 36 ("
")
--accepting rule at line 37 ("# 1 "11-numbers.oc"")
--accepting rule at line 36 ("
")
--accepting rule at line 36 ("
")
--accepting rule at line 36 ("
")
--accepting rule at line 37 ("# 1 "oclib.oh" 1")
--accepting rule at line 36 ("
")
--accepting rule at line 37 ("# 24 "oclib.oh"")
--accepting rule at line 36 ("
")
--accepting rule at line 65 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 6
Reducing stack by rule 17 (line 81):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("__assert_fail")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 77
Reading a token: --accepting rule at line 69 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 10
Reducing stack by rule 21 (line 85):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 33 77
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("expr")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2 33 77
Entering state 117
Reducing stack by rule 31 (line 117):
   $1 = token '(' ()
   $2 = nterm gendecl ()
-> $$ = nterm params ()
Stack now 0 2 33
Entering state 78
Reading a token: --accepting rule at line 47 (",")
Next token is token ',' ()
Shifting token ',' ()
Entering state 119
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 69 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 10
Reducing stack by rule 21 (line 85):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 33 78 119
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("file")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2 33 78 119
Entering state 151
Reducing stack by rule 30 (line 116):
   $1 = nterm params ()
   $2 = token ',' ()
   $3 = nterm gendecl ()
-> $$ = nterm params ()
Stack now 0 2 33
Entering state 78
Reading a token: --accepting rule at line 47 (",")
Next token is token ',' ()
Shifting token ',' ()
Entering state 119
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 68 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 9
Reducing stack by rule 20 (line 84):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 33 78 119
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("line")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2 33 78 119
Entering state 151
Reducing stack by rule 30 (line 116):
   $1 = nterm params ()
   $2 = token ',' ()
   $3 = nterm gendecl ()
-> $$ = nterm params ()
Stack now 0 2 33
Entering state 78
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 148
Reducing stack by rule 24 (line 92):
   $1 = nterm gendecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 65 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 6
Reducing stack by rule 17 (line 81):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("putb")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 77
Reading a token: --accepting rule at line 66 ("bool")
Next token is token TOK_BOOL ()
Shifting token TOK_BOOL ()
Entering state 7
Reducing stack by rule 18 (line 82):
   $1 = token TOK_BOOL ()
-> $$ = nterm basetype ()
Stack now 0 2 33 77
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("b")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2 33 77
Entering state 117
Reducing stack by rule 31 (line 117):
   $1 = token '(' ()
   $2 = nterm gendecl ()
-> $$ = nterm params ()
Stack now 0 2 33
Entering state 78
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 148
Reducing stack by rule 24 (line 92):
   $1 = nterm gendecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 65 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 6
Reducing stack by rule 17 (line 81):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 77
Reading a token: --accepting rule at line 67 ("char")
Next token is token TOK_CHAR ()
Shifting token TOK_CHAR ()
Entering state 8
Reducing stack by rule 19 (line 83):
   $1 = token TOK_CHAR ()
-> $$ = nterm basetype ()
Stack now 0 2 33 77
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("c")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2 33 77
Entering state 117
Reducing stack by rule 31 (line 117):
   $1 = token '(' ()
   $2 = nterm gendecl ()
-> $$ = nterm params ()
Stack now 0 2 33
Entering state 78
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 148
Reducing stack by rule 24 (line 92):
   $1 = nterm gendecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 65 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 6
Reducing stack by rule 17 (line 81):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 77
Reading a token: --accepting rule at line 68 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 9
Reducing stack by rule 20 (line 84):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 33 77
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("i")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2 33 77
Entering state 117
Reducing stack by rule 31 (line 117):
   $1 = token '(' ()
   $2 = nterm gendecl ()
-> $$ = nterm params ()
Stack now 0 2 33
Entering state 78
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 148
Reducing stack by rule 24 (line 92):
   $1 = nterm gendecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 65 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 6
Reducing stack by rule 17 (line 81):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("puts")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 77
Reading a token: --accepting rule at line 69 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 10
Reducing stack by rule 21 (line 85):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 33 77
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("s")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2 33 77
Entering state 117
Reducing stack by rule 31 (line 117):
   $1 = token '(' ()
   $2 = nterm gendecl ()
-> $$ = nterm params ()
Stack now 0 2 33
Entering state 78
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 148
Reducing stack by rule 24 (line 92):
   $1 = nterm gendecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 65 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 6
Reducing stack by rule 17 (line 81):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("endl")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 77
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 116
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 145
Reducing stack by rule 23 (line 89):
   $1 = nterm gendecl ()
   $2 = token '(' ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 68 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 9
Reducing stack by rule 20 (line 84):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("getc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 77
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 116
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 145
Reducing stack by rule 23 (line 89):
   $1 = nterm gendecl ()
   $2 = token '(' ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 69 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 10
Reducing stack by rule 21 (line 85):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("getw")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 77
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 116
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 145
Reducing stack by rule 23 (line 89):
   $1 = nterm gendecl ()
   $2 = token '(' ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 69 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 10
Reducing stack by rule 21 (line 85):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("getln")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 77
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 116
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 145
Reducing stack by rule 23 (line 89):
   $1 = nterm gendecl ()
   $2 = token '(' ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 69 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 10
Reducing stack by rule 21 (line 85):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 39 ("[]")
Next token is token TOK_NEWARRAY ()
Shifting token TOK_NEWARRAY ()
Entering state 80
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("getargv")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 120
Reducing stack by rule 14 (line 72):
   $1 = nterm basetype ()
   $2 = token TOK_NEWARRAY ()
   $3 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 77
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 116
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 145
Reducing stack by rule 23 (line 89):
   $1 = nterm gendecl ()
   $2 = token '(' ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 65 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 6
Reducing stack by rule 17 (line 81):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("exit")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 77
Reading a token: --accepting rule at line 68 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 9
Reducing stack by rule 20 (line 84):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 33 77
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("status")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2 33 77
Entering state 117
Reducing stack by rule 31 (line 117):
   $1 = token '(' ()
   $2 = nterm gendecl ()
-> $$ = nterm params ()
Stack now 0 2 33
Entering state 78
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 118
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 148
Reducing stack by rule 24 (line 92):
   $1 = nterm gendecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
-> $$ = nterm function ()
Stack now 0 2
Entering state 35
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 37 ("# 4 "11-numbers.oc" 2")
--accepting rule at line 36 ("
")
--accepting rule at line 36 ("
")
--accepting rule at line 68 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 9
Reducing stack by rule 20 (line 84):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 34
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 79
Reducing stack by rule 13 (line 71):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm gendecl ()
Stack now 0 2
Entering state 33
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 49 ("=")
Next token is token '=' ()
Shifting token '=' ()
Entering state 76
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 83 ("1")
Next token is token TOK_INTCON ()
Shifting token TOK_INTCON ()
Entering state 20
Reducing stack by rule 84 (line 214):
   $1 = token TOK_INTCON ()
-> $$ = nterm constant ()
Stack now 0 2 33 76
Entering state 51
Reducing stack by rule 55 (line 164):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 33 76
Entering state 115
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 144
Reducing stack by rule 43 (line 137):
   $1 = nterm gendecl ()
   $2 = token '=' ()
   $3 = nterm expr ()
   $4 = token ';' ()
-> $$ = nterm vardecl ()
Stack now 0 2
Entering state 40
Reducing stack by rule 38 (line 130):
   $1 = nterm vardecl ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 39
Reducing stack by rule 4 (line 52):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 73 ("while")
Next token is token TOK_WHILE ()
Shifting token TOK_WHILE ()
Entering state 12
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 55
Reading a token: --accepting rule at line 82 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 19
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 55 (">")
Next token is token TOK_GT ()
Reducing stack by rule 81 (line 207):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 12 55
Entering state 50
Reducing stack by rule 54 (line 163):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 12 55
Entering state 103
Next token is token TOK_GT ()
Shifting token TOK_GT ()
Entering state 88
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 83 ("0")
Next token is token TOK_INTCON ()
Shifting token TOK_INTCON ()
Entering state 20
Reducing stack by rule 84 (line 214):
   $1 = token TOK_INTCON ()
-> $$ = nterm constant ()
Stack now 0 2 12 55 103 88
Entering state 51
Reducing stack by rule 55 (line 164):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 12 55 103 88
Entering state 125
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Reducing stack by rule 61 (line 172):
   $1 = nterm expr ()
   $2 = token TOK_GT ()
   $3 = nterm expr ()
-> $$ = nterm binop ()
Stack now 0 2 12 55
Entering state 45
Reducing stack by rule 49 (line 158):
   $1 = nterm binop ()
-> $$ = nterm expr ()
Stack now 0 2 12 55
Entering state 103
Next token is token ')' ()
Shifting token ')' ()
Entering state 138
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 44 ("{")
Next token is token '{' ()
Shifting token '{' ()
Entering state 30
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 35 ("   ")
--accepting rule at line 82 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 19
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reducing stack by rule 78 (line 200):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
-> $$ = nterm callfront ()
Stack now 0 2 12 55 103 138 30
Entering state 48
Reading a token: --accepting rule at line 82 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 19
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Reducing stack by rule 81 (line 207):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 12 55 103 138 30 48
Entering state 50
Reducing stack by rule 54 (line 163):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 12 55 103 138 30 48
Entering state 100
Next token is token ')' ()
Reducing stack by rule 77 (line 197):
   $1 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2 12 55 103 138 30 48
Entering state 101
Next token is token ')' ()
Shifting token ')' ()
Entering state 135
Reducing stack by rule 80 (line 204):
   $1 = nterm callfront ()
   $2 = nterm exprs ()
   $3 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2 12 55 103 138 30
Entering state 49
Reducing stack by rule 52 (line 161):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2 12 55 103 138 30
Entering state 44
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 98
Reducing stack by rule 42 (line 134):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2 12 55 103 138 30
Entering state 71
Reducing stack by rule 36 (line 126):
   $1 = token '{' ()
   $2 = nterm statement ()
-> $$ = nterm blocks ()
Stack now 0 2 12 55 103 138
Entering state 38
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 35 ("   ")
--accepting rule at line 82 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 19
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reducing stack by rule 78 (line 200):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
-> $$ = nterm callfront ()
Stack now 0 2 12 55 103 138 38
Entering state 48
Reading a token: --accepting rule at line 84 ("'\n'")
Next token is token TOK_CHARCON ()
Shifting token TOK_CHARCON ()
Entering state 21
Reducing stack by rule 85 (line 215):
   $1 = token TOK_CHARCON ()
-> $$ = nterm constant ()
Stack now 0 2 12 55 103 138 38 48
Entering state 51
Reducing stack by rule 55 (line 164):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 12 55 103 138 38 48
Entering state 100
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Reducing stack by rule 77 (line 197):
   $1 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2 12 55 103 138 38 48
Entering state 101
Next token is token ')' ()
Shifting token ')' ()
Entering state 135
Reducing stack by rule 80 (line 204):
   $1 = nterm callfront ()
   $2 = nterm exprs ()
   $3 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2 12 55 103 138 38
Entering state 49
Reducing stack by rule 52 (line 161):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2 12 55 103 138 38
Entering state 44
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 98
Reducing stack by rule 42 (line 134):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2 12 55 103 138 38
Entering state 83
Reducing stack by rule 35 (line 125):
   $1 = nterm blocks ()
   $2 = nterm statement ()
-> $$ = nterm blocks ()
Stack now 0 2 12 55 103 138
Entering state 38
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 35 ("   ")
--accepting rule at line 82 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 19
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 49 ("=")
Next token is token '=' ()
Reducing stack by rule 81 (line 207):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 12 55 103 138 38
Entering state 50
Reducing stack by rule 54 (line 163):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 12 55 103 138 38
Entering state 44
Next token is token '=' ()
Shifting token '=' ()
Entering state 90
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 19
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 58 ("+")
Next token is token '+' ()
Reducing stack by rule 81 (line 207):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 12 55 103 138 38 44 90
Entering state 50
Reducing stack by rule 54 (line 163):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 12 55 103 138 38 44 90
Entering state 127
Next token is token '+' ()
Shifting token '+' ()
Entering state 91
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 82 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 19
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Reducing stack by rule 81 (line 207):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 12 55 103 138 38 44 90 127 91
Entering state 50
Reducing stack by rule 54 (line 163):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 12 55 103 138 38 44 90 127 91
Entering state 128
Next token is token ';' ()
Reducing stack by rule 63 (line 174):
   $1 = nterm expr ()
   $2 = token '+' ()
   $3 = nterm expr ()
-> $$ = nterm binop ()
Stack now 0 2 12 55 103 138 38 44 90
Entering state 45
Reducing stack by rule 49 (line 158):
   $1 = nterm binop ()
-> $$ = nterm expr ()
Stack now 0 2 12 55 103 138 38 44 90
Entering state 127
Next token is token ';' ()
Reducing stack by rule 56 (line 167):
   $1 = nterm expr ()
   $2 = token '=' ()
   $3 = nterm expr ()
-> $$ = nterm binop ()
Stack now 0 2 12 55 103 138 38
Entering state 45
Reducing stack by rule 49 (line 158):
   $1 = nterm binop ()
-> $$ = nterm expr ()
Stack now 0 2 12 55 103 138 38
Entering state 44
Next token is token ';' ()
Shifting token ';' ()
Entering state 98
Reducing stack by rule 42 (line 134):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2 12 55 103 138 38
Entering state 83
Reducing stack by rule 35 (line 125):
   $1 = nterm blocks ()
   $2 = nterm statement ()
-> $$ = nterm blocks ()
Stack now 0 2 12 55 103 138
Entering state 38
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 45 ("}")
Next token is token '}' ()
Shifting token '}' ()
Entering state 82
Reducing stack by rule 33 (line 121):
   $1 = nterm blocks ()
   $2 = token '}' ()
-> $$ = nterm block ()
Stack now 0 2 12 55 103 138
Entering state 37
Reducing stack by rule 37 (line 129):
   $1 = nterm block ()
-> $$ = nterm statement ()
Stack now 0 2 12 55 103 138
Entering state 155
Reducing stack by rule 44 (line 142):
   $1 = token TOK_WHILE ()
   $2 = token '(' ()
   $3 = nterm expr ()
   $4 = token ')' ()
   $5 = nterm statement ()
-> $$ = nterm while ()
Stack now 0 2
Entering state 41
Reducing stack by rule 39 (line 131):
   $1 = nterm while ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 39
Reducing stack by rule 4 (line 52):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 82 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 19
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reducing stack by rule 78 (line 200):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
-> $$ = nterm callfront ()
Stack now 0 2
Entering state 48
Reading a token: --accepting rule at line 82 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 19
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Reducing stack by rule 81 (line 207):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 48
Entering state 50
Reducing stack by rule 54 (line 163):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 48
Entering state 100
Next token is token ')' ()
Reducing stack by rule 77 (line 197):
   $1 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2 48
Entering state 101
Next token is token ')' ()
Shifting token ')' ()
Entering state 135
Reducing stack by rule 80 (line 204):
   $1 = nterm callfront ()
   $2 = nterm exprs ()
   $3 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2
Entering state 49
Reducing stack by rule 52 (line 161):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2
Entering state 44
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 98
Reducing stack by rule 42 (line 134):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 39
Reducing stack by rule 4 (line 52):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--accepting rule at line 82 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 19
Reading a token: --accepting rule at line 35 (" ")
--accepting rule at line 40 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reducing stack by rule 78 (line 200):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
-> $$ = nterm callfront ()
Stack now 0 2
Entering state 48
Reading a token: --accepting rule at line 84 ("'\n'")
Next token is token TOK_CHARCON ()
Shifting token TOK_CHARCON ()
Entering state 21
Reducing stack by rule 85 (line 215):
   $1 = token TOK_CHARCON ()
-> $$ = nterm constant ()
Stack now 0 2 48
Entering state 51
Reducing stack by rule 55 (line 164):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 48
Entering state 100
Reading a token: --accepting rule at line 41 (")")
Next token is token ')' ()
Reducing stack by rule 77 (line 197):
   $1 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2 48
Entering state 101
Next token is token ')' ()
Shifting token ')' ()
Entering state 135
Reducing stack by rule 80 (line 204):
   $1 = nterm callfront ()
   $2 = nterm exprs ()
   $3 = token ')' ()
-> $$ = nterm call ()
Stack now 0 2
Entering state 49
Reducing stack by rule 52 (line 161):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2
Entering state 44
Reading a token: --accepting rule at line 46 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 98
Reducing stack by rule 42 (line 134):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 39
Reducing stack by rule 4 (line 52):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 36 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Now at end of input.
Reducing stack by rule 1 (line 47):
   $1 = nterm program ()
-> $$ = nterm start ()
Stack now 0
Entering state 1
Now at end of input.
Shifting token $end ()
Entering state 3
Stack now 0 1 3
Cleanup: popping token $end ()
Cleanup: popping nterm start ()
